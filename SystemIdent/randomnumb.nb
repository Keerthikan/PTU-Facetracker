(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     93637,       1841]
NotebookOptionsPosition[     91194,       1753]
NotebookOutlinePosition[     91549,       1769]
CellTagsIndexPosition[     91506,       1766]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.349880"}], "}"}], "]"}], ",", "100"}], "]"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.639478443755507*^9, 3.6394784666897793`*^9}, {
  3.639478521467534*^9, 3.6394785235872593`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NormalDistribution", "::", "argr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(NormalDistribution\\)\[NoBreak] called \
with 1 argument; \[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NormalDistribution\\\", \
ButtonNote -> \\\"NormalDistribution::argr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.639478529738714*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RandomVariate", "::", "realprm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Parameter \[NoBreak]\\!\\({0, 0.34988`}\\)\[NoBreak] at \
position \[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(NormalDistribution[\\(\\({0, 0.34988`}\\)\\)]\\)\[NoBreak] is \
expected to be real. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/RandomVariate\\\", ButtonNote -> \
\\\"RandomVariate::realprm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6394785298157463`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NormalDistribution", "::", "argr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(NormalDistribution\\)\[NoBreak] called \
with 1 argument; \[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NormalDistribution\\\", \
ButtonNote -> \\\"NormalDistribution::argr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.639478529823181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.34988`"}], "}"}], "]"}], ",", "100"}], "]"}]], \
"Input",
 CellChangeTimes->{{3.6394786642468348`*^9, 3.6394786847766533`*^9}, {
  3.639478727669197*^9, 3.639478824587674*^9}, {3.639478856918448*^9, 
  3.639478861044869*^9}, {3.63947893313687*^9, 3.6394789496712923`*^9}, {
  3.639478983106934*^9, 3.639479038097329*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.07511799301568223`", ",", "0.08733348062384172`", ",", 
   "0.06851466239349208`", ",", "0.02647381791069392`", ",", 
   "0.17925160590794037`", ",", "0.17258814644318649`", ",", 
   "0.1478055434166861`", ",", "0.07305691721991403`", ",", 
   "0.32352963646419813`", ",", "0.08939760319219603`", ",", 
   "0.2722994029198558`", ",", "0.19165780721590392`", ",", 
   "0.1576131750234006`", ",", "0.004384051480630813`", ",", 
   "0.3111013176383423`", ",", "0.20385797221070084`", ",", 
   "0.004996387166555261`", ",", "0.06797854105057038`", ",", 
   "0.2766509243827813`", ",", "0.1967635724430838`", ",", 
   "0.2608064969199107`", ",", "0.3347904107502963`", ",", 
   "0.140801625870359`", ",", "0.29492986628082446`", ",", 
   "0.3161428358896559`", ",", "0.3146715932191075`", ",", 
   "0.22291610773285714`", ",", "0.2158390313595891`", ",", 
   "0.017135185264201325`", ",", "0.2815157273812681`", ",", 
   "0.06761133311113315`", ",", "0.1227232765380114`", ",", 
   "0.12364342334996065`", ",", "0.3437952353788019`", ",", 
   "0.07822865764165376`", ",", "0.12174371130682882`", ",", 
   "0.33815582266305594`", ",", "0.02821427207321686`", ",", 
   "0.25613536091343364`", ",", "0.056631387004747846`", ",", 
   "0.19073433400290968`", ",", "0.12901509720728427`", ",", 
   "0.13454325381205268`", ",", "0.007093016070854163`", ",", 
   "0.2232944690023982`", ",", "0.2783113518963925`", ",", 
   "0.28752916255029565`", ",", "0.24438470898450354`", ",", 
   "0.16811166405364059`", ",", "0.02554088387272202`", ",", 
   "0.10652925363436488`", ",", "0.12436648114635407`", ",", 
   "0.12905849567088218`", ",", "0.04645660473357477`", ",", 
   "0.09663244610190036`", ",", "0.014391141114773687`", ",", 
   "0.3405759061485731`", ",", "0.3464640826437903`", ",", 
   "0.29580068064990767`", ",", "0.0802204963639292`", ",", 
   "0.09315851330031094`", ",", "0.22809514753771704`", ",", 
   "0.2640417240698533`", ",", "0.061514750690382314`", ",", 
   "0.27076225298818296`", ",", "0.30095310107256107`", ",", 
   "0.1355724002443796`", ",", "0.004556653019421764`", ",", 
   "0.02605253973662708`", ",", "0.1763765803213539`", ",", 
   "0.17557826626717027`", ",", "0.05405524342947948`", ",", 
   "0.22703132917942476`", ",", "0.33281529563728224`", ",", 
   "0.12604187615737983`", ",", "0.0010322616782794114`", ",", 
   "0.038497831037764385`", ",", "0.09253590751108953`", ",", 
   "0.27246900455141726`", ",", "0.10626115099558925`", ",", 
   "0.2875104582320322`", ",", "0.2916147075064022`", ",", 
   "0.156399628139742`", ",", "0.2442097247502309`", ",", 
   "0.27684215287027375`", ",", "0.15025682067548657`", ",", 
   "0.2551915392474465`", ",", "0.10965195550986995`", ",", 
   "0.10938464946444648`", ",", "0.23170219968874955`", ",", 
   "0.03656568586874159`", ",", "0.11046165636883792`", ",", 
   "0.08403873265231127`", ",", "0.23697818828719236`", ",", 
   "0.22620054285965568`", ",", "0.21060523231842315`", ",", 
   "0.17066509339644093`", ",", "0.0229339177466531`", ",", 
   "0.02114537898652097`", ",", "0.18039464009708733`"}], "}"}]], "Output",
 CellChangeTimes->{3.639479038549111*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", 
  StyleBox["[", "Input"], 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\"\<\>", "/", "Users"}], "/", "keerthikanratnarajah"}], "/", 
      "PTU"}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"Facetracker", "/", "SystemIdent"}], "/", 
       RowBox[{"data", ".", "csv"}]}], "\"\<\>"}]}], "Input"], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.07511799301568223`", ",", "0.08733348062384172`", ",", 
     "0.06851466239349208`", ",", "0.02647381791069392`", ",", 
     "0.17925160590794037`", ",", "0.17258814644318649`", ",", 
     "0.1478055434166861`", ",", "0.07305691721991403`", ",", 
     "0.32352963646419813`", ",", "0.08939760319219603`", ",", 
     "0.2722994029198558`", ",", "0.19165780721590392`", ",", 
     "0.1576131750234006`", ",", "0.004384051480630813`", ",", 
     "0.3111013176383423`", ",", "0.20385797221070084`", ",", 
     "0.004996387166555261`", ",", "0.06797854105057038`", ",", 
     "0.2766509243827813`", ",", "0.1967635724430838`", ",", 
     "0.2608064969199107`", ",", "0.3347904107502963`", ",", 
     "0.140801625870359`", ",", "0.29492986628082446`", ",", 
     "0.3161428358896559`", ",", "0.3146715932191075`", ",", 
     "0.22291610773285714`", ",", "0.2158390313595891`", ",", 
     "0.017135185264201325`", ",", "0.2815157273812681`", ",", 
     "0.06761133311113315`", ",", "0.1227232765380114`", ",", 
     "0.12364342334996065`", ",", "0.3437952353788019`", ",", 
     "0.07822865764165376`", ",", "0.12174371130682882`", ",", 
     "0.33815582266305594`", ",", "0.02821427207321686`", ",", 
     "0.25613536091343364`", ",", "0.056631387004747846`", ",", 
     "0.19073433400290968`", ",", "0.12901509720728427`", ",", 
     "0.13454325381205268`", ",", "0.007093016070854163`", ",", 
     "0.2232944690023982`", ",", "0.2783113518963925`", ",", 
     "0.28752916255029565`", ",", "0.24438470898450354`", ",", 
     "0.16811166405364059`", ",", "0.02554088387272202`", ",", 
     "0.10652925363436488`", ",", "0.12436648114635407`", ",", 
     "0.12905849567088218`", ",", "0.04645660473357477`", ",", 
     "0.09663244610190036`", ",", "0.014391141114773687`", ",", 
     "0.3405759061485731`", ",", "0.3464640826437903`", ",", 
     "0.29580068064990767`", ",", "0.0802204963639292`", ",", 
     "0.09315851330031094`", ",", "0.22809514753771704`", ",", 
     "0.2640417240698533`", ",", "0.061514750690382314`", ",", 
     "0.27076225298818296`", ",", "0.30095310107256107`", ",", 
     "0.1355724002443796`", ",", "0.004556653019421764`", ",", 
     "0.02605253973662708`", ",", "0.1763765803213539`", ",", 
     "0.17557826626717027`", ",", "0.05405524342947948`", ",", 
     "0.22703132917942476`", ",", "0.33281529563728224`", ",", 
     "0.12604187615737983`", ",", "0.0010322616782794114`", ",", 
     "0.038497831037764385`", ",", "0.09253590751108953`", ",", 
     "0.27246900455141726`", ",", "0.10626115099558925`", ",", 
     "0.2875104582320322`", ",", "0.2916147075064022`", ",", 
     "0.156399628139742`", ",", "0.2442097247502309`", ",", 
     "0.27684215287027375`", ",", "0.15025682067548657`", ",", 
     "0.2551915392474465`", ",", "0.10965195550986995`", ",", 
     "0.10938464946444648`", ",", "0.23170219968874955`", ",", 
     "0.03656568586874159`", ",", "0.11046165636883792`", ",", 
     "0.08403873265231127`", ",", "0.23697818828719236`", ",", 
     "0.22620054285965568`", ",", "0.21060523231842315`", ",", 
     "0.17066509339644093`", ",", "0.0229339177466531`", ",", 
     "0.02114537898652097`", ",", "0.18039464009708733`"}], "}"}], ",", 
   "\"\<csv\>\""}], 
  StyleBox["]", "Input"]}]], "Input",
 CellChangeTimes->{{3.639479040361787*^9, 3.639479053626348*^9}, {
  3.6394790836563396`*^9, 3.6394790845675907`*^9}, {3.6394802058130302`*^9, 
  3.639480231757846*^9}, {3.639480425075922*^9, 3.639480427721554*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Syntax", "::", "tsntxi"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\\\"\[NoBreak]\\!\\(Export[\\(\\(\[LeftSkeleton] 200 \
\[RightSkeleton]\\)\\), \\(\\({0.07511799301568223`, 0.08733348062384172`, \
0.06851466239349208`, 0.02647381791069392`, \\(\\(\[LeftSkeleton] 92 \
\[RightSkeleton]\\)\\), 0.17066509339644093`, 0.0229339177466531`, \
0.02114537898652097`, 0.18039464009708733`}\\)\\), \
\\\"csv\\\"]\\)\[NoBreak]\\\" is incomplete; more input is \
needed.\[NoBreak]\\!\\(\\\"\\\"\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.639480431506483*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Syntax", "::", "sntxi"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Incomplete expression; more input is needed \
\[NoBreak]\\!\\(\\\"\\\"\\)\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6394804315074177`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.63947887163258*^9, 3.6394788725240192`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Path", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6394801106887627`*^9, 3.63948011570044*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Applications/Mathematica.app/SystemFiles/Links\"\>", 
   ",", "\<\"/Users/keerthikanratnarajah/Library/Mathematica/Kernel\"\>", 
   ",", "\<\"/Users/keerthikanratnarajah/Library/Mathematica/Autoload\"\>", 
   ",", "\<\"/Users/keerthikanratnarajah/Library/Mathematica/Applications\"\>\
", ",", "\<\"/Library/Mathematica/Kernel\"\>", 
   ",", "\<\"/Library/Mathematica/Autoload\"\>", 
   ",", "\<\"/Library/Mathematica/Applications\"\>", ",", "\<\".\"\>", 
   ",", "\<\"/Users/keerthikanratnarajah\"\>", 
   ",", "\<\"/Applications/Mathematica.app/AddOns/Packages\"\>", 
   ",", "\<\"/Applications/Mathematica.app/AddOns/LegacyPackages\"\>", 
   ",", "\<\"/Applications/Mathematica.app/SystemFiles/Autoload\"\>", 
   ",", "\<\"/Applications/Mathematica.app/AddOns/Autoload\"\>", 
   ",", "\<\"/Applications/Mathematica.app/AddOns/Applications\"\>", 
   ",", "\<\"/Applications/Mathematica.app/AddOns/ExtraPackages\"\>", 
   ",", "\<\"/Applications/Mathematica.app/SystemFiles/Kernel/Packages\"\>", 
   ",", "\<\"/Applications/Mathematica.app/Documentation/English/System\"\>"}]\
, "}"}]], "Output",
 CellChangeTimes->{3.6394801163990927`*^9}]
}, Open  ]],

Cell[BoxData["\"\</Users/keerthikanratnarajah/Documents/Untitled 4.pdf\>\""], \
"Input",
 CellChangeTimes->{3.639480188310828*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "@", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\n"}]], "Input",
 CellChangeTimes->{{3.639480460167736*^9, 3.6394804601685658`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<dataPan.csv\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.799760"}], ",", "0.799760`"}], "}"}], "]"}], ",", 
      "100"}], "]"}], "}"}], ",", "\"\<csv\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.639480503576627*^9, 3.639480535184353*^9}, {
  3.639480772615367*^9, 3.639480778119028*^9}, {3.639484401399372*^9, 
  3.639484406854076*^9}, {3.639558343958295*^9, 3.63955836586764*^9}, {
  3.639565422469839*^9, 3.639565423055249*^9}, {3.640267129874267*^9, 
  3.640267130060254*^9}}],

Cell[BoxData["\<\"dataPan.csv\"\>"], "Output",
 CellChangeTimes->{
  3.6394805361807013`*^9, 3.6394807791304483`*^9, 3.639484407321741*^9, {
   3.6395583577958593`*^9, 3.639558393673572*^9}, {3.639565424213895*^9, 
   3.639565431424055*^9}, 3.640267131705201*^9, {3.640269801657885*^9, 
   3.640269813948007*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<dataPantid.csv\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "100"}], "]"}], "}"}], 
   ",", "\"\<csv\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.64026979227352*^9, 3.64026980495245*^9}}],

Cell[BoxData["\<\"dataPantid.csv\"\>"], "Output",
 CellChangeTimes->{{3.6402697978117123`*^9, 3.6402698154267693`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{"0.0261799388", "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "Pi", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"t", "/", "5"}]}], "+", "2"}], ")"}], " ", "t"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6403380226120243`*^9, 3.640338066042439*^9}, {
   3.640338106341061*^9, 3.6403381256374197`*^9}, {3.640338160165903*^9, 
   3.640338160253727*^9}, {3.6403382143351297`*^9, 3.640338214447598*^9}, 
   3.6403388671435537`*^9, {3.640339888073859*^9, 3.640339893001239*^9}, {
   3.640341057064145*^9, 3.6403410868476686`*^9}, 3.641010150128244*^9, {
   3.641010242200759*^9, 3.641010243705533*^9}, {3.641016671820258*^9, 
   3.641016688268585*^9}, 3.641022393225388*^9, {3.641025239786951*^9, 
   3.641025240347734*^9}, {3.641025748364807*^9, 3.641025749939118*^9}, {
   3.6410276706729593`*^9, 3.641027672326419*^9}, {3.641029748523312*^9, 
   3.6410297508487797`*^9}, {3.641030135723681*^9, 3.641030140696452*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 5}, {-0.02617993614901845, 0.026179938790422613`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.6410101628896217`*^9, 3.64101024466968*^9, 3.641016690157407*^9, 
   3.641022396358583*^9, {3.6410252423704576`*^9, 3.641025245367272*^9}, {
   3.641025751404275*^9, 3.641025756140582*^9}, {3.641027672927129*^9, 
   3.6410276752352324`*^9}, {3.641029751478106*^9, 3.6410297545806513`*^9}, {
   3.641030141648686*^9, 3.641030144326666*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", "#", "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "5", ",", "0.001"}], "]"}]}], "\n"}]], "Input",
 CellChangeTimes->{{3.6410101557879333`*^9, 3.6410101557925663`*^9}, 
   3.641142696808519*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.0032910079305506308`", ",", "0.006548916739703596`", ",", 
   "0.009720011363719647`", ",", "0.012750432232317732`", ",", 
   "0.01558711248607374`", ",", "0.0181787496884994`", ",", 
   "0.020476795414157558`", ",", "0.02243644453044268`", ",", 
   "0.024017604689991322`", ",", "0.025185825566030228`", ",", 
   "0.025913166744936135`", ",", "0.026178982985659564`", ",", 
   "0.025970605805836496`", ",", "0.025283901093748694`", ",", 
   "0.024123683699548176`", ",", "0.02250397174391848`", ",", 
   "0.02044806570156258`", ",", "0.017988440161614525`", ",", 
   "0.015166439514272663`", ",", "0.012031772624783076`", ",", 
   "0.008641805779119245`", ",", "0.00506065775151458`", ",", 
   "0.0013581056683437884`", ",", 
   RowBox[{"-", "0.0023916846729269154`"}], ",", 
   RowBox[{"-", "0.006111585338891333`"}], ",", 
   RowBox[{"-", "0.009723066002299729`"}], ",", 
   RowBox[{"-", "0.0131478584964907`"}], ",", 
   RowBox[{"-", "0.016309693388765874`"}], ",", 
   RowBox[{"-", "0.019136071872470566`"}], ",", 
   RowBox[{"-", "0.021560033005717256`"}], ",", 
   RowBox[{"-", "0.023521873826713835`"}], ",", 
   RowBox[{"-", "0.02497077828176928`"}], ",", 
   RowBox[{"-", "0.025866310329298543`"}], ",", 
   RowBox[{"-", "0.026179727130769596`"}], ",", 
   RowBox[{"-", "0.025895069984298618`"}], ",", 
   RowBox[{"-", "0.025009993648407853`"}], ",", 
   RowBox[{"-", "0.02353629896125585`"}], ",", 
   RowBox[{"-", "0.021500139168861315`"}], ",", 
   RowBox[{"-", "0.018941877081511238`"}], ",", 
   RowBox[{"-", "0.01591557798831054`"}], ",", 
   RowBox[{"-", "0.012488132042929272`"}], ",", 
   RowBox[{"-", "0.00873800941602544`"}], ",", 
   RowBox[{"-", "0.004753661679755746`"}], ",", 
   RowBox[{"-", "0.0006315933994369888`"}], ",", "0.0035258615227425037`", 
   ",", "0.007613013882590467`", ",", "0.011523488963345655`", ",", 
   "0.015153028605762163`", ",", "0.01840235447545254`", ",", 
   "0.021180015400896052`", ",", "0.02340513748316475`", ",", 
   "0.025009993648407856`", ",", "0.025942309652970598`", ",", 
   "0.026167226428655984`", ",", "0.025668844174673133`", ",", 
   "0.024451281788939034`", ",", "0.022539196025528938`", ",", 
   "0.01997771801763814`", ",", "0.016831780273267375`", ",", 
   "0.013184824597084307`", ",", "0.009136900189056042`", ",", 
   "0.004802180907100763`", ",", "0.00030595077212188854`", ",", 
   RowBox[{"-", "0.004218873405329565`"}], ",", 
   RowBox[{"-", "0.00863559457385338`"}], ",", 
   RowBox[{"-", "0.012807858324667463`"}], ",", 
   RowBox[{"-", "0.01660392652366768`"}], ",", 
   RowBox[{"-", "0.01990097043275308`"}], ",", 
   RowBox[{"-", "0.022589244085022088`"}], ",", 
   RowBox[{"-", "0.024575994942866337`"}], ",", 
   RowBox[{"-", "0.025788969807393813`"}], ",", 
   RowBox[{"-", "0.026179379862174165`"}], ",", 
   RowBox[{"-", "0.02572419976718488`"}], ",", 
   RowBox[{"-", "0.024427691837299263`"}], ",", 
   RowBox[{"-", "0.022322067321212065`"}], ",", 
   RowBox[{"-", "0.0194672222213054`"}], ",", 
   RowBox[{"-", "0.01594951434420195`"}], ",", 
   RowBox[{"-", "0.011879580535703501`"}], ",", 
   RowBox[{"-", "0.007389227346065081`"}], ",", 
   RowBox[{"-", "0.0026274635526678915`"}], ",", "0.002244222223718514`", ",",
    "0.0070572024785180675`", ",", "0.011641504027035725`", ",", 
   "0.015831861574631394`", ",", "0.019473819975025917`", ",", 
   "0.022429660602297504`", ",", "0.02458392224207304`", ",", 
   "0.025848290491464893`", ",", "0.026165642280357386`", ",", 
   "0.025513053888507976`", ",", "0.023903611466879755`", ",", 
   "0.02138690192588749`", ",", "0.01804810808736355`", ",", 
   "0.014005683794747474`", ",", "0.009407640475495917`", ",", 
   "0.0044265343918014725`", ",", 
   RowBox[{"-", "0.0007466987908449534`"}], ",", 
   RowBox[{"-", "0.005909860884935392`"}], ",", 
   RowBox[{"-", "0.010857308965411929`"}], ",", 
   RowBox[{"-", "0.015388181932559492`"}], ",", 
   RowBox[{"-", "0.019314712172084535`"}], ",", 
   RowBox[{"-", "0.0224702791044282`"}], ",", 
   RowBox[{"-", "0.024716855537544696`"}], ",", 
   RowBox[{"-", "0.0259515066349492`"}], ",", 
   RowBox[{"-", "0.026111625528275974`"}], ",", 
   RowBox[{"-", "0.02517862903324261`"}], ",", 
   RowBox[{"-", "0.023179890764685955`"}], ",", 
   RowBox[{"-", "0.020188755671234505`"}], ",", 
   RowBox[{"-", "0.016322557406386665`"}], ",", 
   RowBox[{"-", "0.011738645156184143`"}], ",", 
   RowBox[{"-", "0.0066285161287562`"}], ",", 
   RowBox[{"-", "0.0012102400107036608`"}], ",", "0.0042805518477096035`", 
   ",", "0.009600761211954106`", ",", "0.014510583952401908`", ",", 
   "0.01878446902513431`", ",", "0.022221776128340347`", ",", 
   "0.024656623653913076`", ",", "0.02596643329384994`", ",", 
   "0.026078716923991378`", ",", "0.02497571472623782`", ",", 
   "0.022696579248262388`", ",", "0.019336905326230974`", ",", 
   "0.015045526424578562`", ",", "0.010018628839091976`", ",", 
   "0.004491370364283017`", ",", 
   RowBox[{"-", "0.0012726771712014244`"}], ",", 
   RowBox[{"-", "0.006993818572897911`"}], ",", 
   RowBox[{"-", "0.01238970887441624`"}], ",", 
   RowBox[{"-", "0.017189374902564163`"}], ",", 
   RowBox[{"-", "0.021147093584714987`"}], ",", 
   RowBox[{"-", "0.024055412490940016`"}], ",", 
   RowBox[{"-", "0.025756610954601803`"}], ",", 
   RowBox[{"-", "0.02615195049491026`"}], ",", 
   RowBox[{"-", "0.02520815063902172`"}], ",", 
   RowBox[{"-", "0.022960648034952603`"}], ",", 
   RowBox[{"-", "0.01951334834361151`"}], ",", 
   RowBox[{"-", "0.015034755253734124`"}], ",", 
   RowBox[{"-", "0.009750550834410092`"}], ",", 
   RowBox[{"-", "0.003932896729375424`"}], ",", "0.002113084097707028`", ",", 
   "0.008065011112790595`", ",", "0.013600353869826278`", ",", 
   "0.01841405077682126`", ",", "0.022235679699261154`", ",", 
   "0.024845205678209924`", ",", "0.026086370310297827`", ",", 
   "0.02587688207722517`", ",", "0.024214714669862428`", ",", 
   "0.021180015400896056`", ",", "0.01693235926450562`", ",", 
   "0.011703344377932414`", ",", "0.0057847974144478245`", ",", 
   RowBox[{"-", "0.000486872415311703`"}], ",", 
   RowBox[{"-", "0.006749381645631895`"}], ",", 
   RowBox[{"-", "0.012635338794882166`"}], ",", 
   RowBox[{"-", "0.017793899636810485`"}], ",", 
   RowBox[{"-", "0.021912041231254283`"}], ",", 
   RowBox[{"-", "0.024734155969451957`"}], ",", 
   RowBox[{"-", "0.026078716923991375`"}], ",", 
   RowBox[{"-", "0.025850895375686384`"}], ",", 
   RowBox[{"-", "0.024050216603936435`"}], ",", 
   RowBox[{"-", "0.020772611930481747`"}], ",", 
   RowBox[{"-", "0.016206549877815737`"}], ",", 
   RowBox[{"-", "0.010623289221979906`"}], ",", 
   RowBox[{"-", "0.004361670458922763`"}], ",", "0.0021917735921355695`", ",",
    "0.008626276743318359`", ",", "0.014532482960451943`", ",", 
   "0.01952869353560692`", ",", "0.023286035725190758`", ",", 
   "0.025550875619512286`", ",", "0.02616291427209183`", ",", 
   "0.025067631569625607`", ",", "0.022322067321212172`", ",", 
   "0.018093336610677285`", ",", "0.012649742993049986`", ",", 
   "0.006344849637472987`", ",", 
   RowBox[{"-", "0.00040463766847077484`"}], ",", 
   RowBox[{"-", "0.007145864967185102`"}], ",", 
   RowBox[{"-", "0.013420005271634405`"}], ",", 
   RowBox[{"-", "0.018793632806282948`"}], ",", 
   RowBox[{"-", "0.02288915624220877`"}], ",", 
   RowBox[{"-", "0.025412156089937674`"}], ",", 
   RowBox[{"-", "0.02617360860695813`"}], ",", 
   RowBox[{"-", "0.025105265348775923`"}], ",", 
   RowBox[{"-", "0.022266880547633247`"}], ",", 
   RowBox[{"-", "0.01784451390708815`"}], ",", 
   RowBox[{"-", "0.012139750698502599`"}], ",", 
   RowBox[{"-", "0.005550333162924142`"}], ",", "0.0014566589381820908`", ",",
    "0.008377353193045526`", ",", "0.01470714442909037`", ",", 
   "0.019977718017638046`", ",", "0.023792320065540537`", ",", 
   "0.02585659019608687`", ",", "0.026002508961125857`", ",", 
   "0.024203444052274783`", ",", "0.020578883539875206`", ",", 
   "0.015388181932559539`", ",", "0.009013465063795535`", ",", 
   "0.0019326826759484999`", ",", 
   RowBox[{"-", "0.005315401841957711`"}], ",", 
   RowBox[{"-", "0.012171801783711892`"}], ",", 
   RowBox[{"-", "0.018100468534364714`"}], ",", 
   RowBox[{"-", "0.02263070559001273`"}], ",", 
   RowBox[{"-", "0.025395458761181357`"}], ",", 
   RowBox[{"-", "0.026162315982952117`"}], ",", 
   RowBox[{"-", "0.024854523225901214`"}], ",", 
   RowBox[{"-", "0.02156003300571723`"}], ",", 
   RowBox[{"-", "0.016527501874080443`"}], ",", 
   RowBox[{"-", "0.010149177939216143`"}], ",", 
   RowBox[{"-", "0.0029316901577058634`"}], ",", "0.004543218735566023`", ",",
    "0.011665071838764206`", ",", "0.017844513907088227`", ",", 
   "0.022562591693527825`", ",", "0.02541531647242465`", ",", 
   "0.026149622787905873`", ",", "0.024687434518654332`", ",", 
   "0.021135451070474175`", ",", "0.015779408726651338`", ",", 
   "0.009062866616928344`", ",", "0.0015519074350849045`", ",", 
   RowBox[{"-", "0.006111585338891323`"}], ",", 
   RowBox[{"-", "0.013264324251475335`"}], ",", 
   RowBox[{"-", "0.019279139698868242`"}], ",", 
   RowBox[{"-", "0.023620649966710074`"}], ",", 
   RowBox[{"-", "0.025894101162831123`"}], ",", 
   RowBox[{"-", "0.02588284217175178`"}], ",", 
   RowBox[{"-", "0.0235707675994309`"}], ",", 
   RowBox[{"-", "0.019147293738672053`"}], ",", 
   RowBox[{"-", "0.012993932524177942`"}], ",", 
   RowBox[{"-", "0.005653170674596615`"}], ",", "0.0022179990287345182`", ",",
    "0.009906061603293149`", ",", "0.016705458791459134`", ",", 
   "0.021983777488882382`", ",", "0.0252416081867548`", ",", 
   "0.026161337237214904`", ",", "0.024639992240030422`", ",", 
   "0.0208026096218445`", ",", "0.014994329553042344`", ",", 
   "0.007751395473788713`", ",", 
   RowBox[{"-", "0.00024673645739200063`"}], ",", 
   RowBox[{"-", "0.008240082744693823`"}], ",", 
   RowBox[{"-", "0.01545995532035914`"}], ",", 
   RowBox[{"-", "0.021203196142555072`"}], ",", 
   RowBox[{"-", "0.024901649498042844`"}], ",", 
   RowBox[{"-", "0.0261799388`"}], ",", 
   RowBox[{"-", "0.024895549747207178`"}], ",", 
   RowBox[{"-", "0.02115678649680511`"}], ",", 
   RowBox[{"-", "0.015316231397616847`"}], ",", 
   RowBox[{"-", "0.007939714915341895`"}], ",", "0.0002467364573920904`", ",",
    "0.008427206441215668`", ",", "0.015776783465123363`", ",", 
   "0.021545092193113142`", ",", "0.02513399528768461`", ",", 
   "0.026161337237214904`", ",", "0.02450379425572291`", ",", 
   "0.020313850116822248`", ",", "0.014008463182449844`", ",", 
   "0.006229880697510091`", ",", 
   RowBox[{"-", "0.00221799902873423`"}], ",", 
   RowBox[{"-", "0.01045162807722639`"}], ",", 
   RowBox[{"-", "0.01759995120490975`"}], ",", 
   RowBox[{"-", "0.022897135961761725`"}], ",", 
   RowBox[{"-", "0.025765986566110757`"}], ",", 
   RowBox[{"-", "0.02588284217175181`"}], ",", 
   RowBox[{"-", "0.02321648579360594`"}], ",", 
   RowBox[{"-", "0.018036188733597427`"}], ",", 
   RowBox[{"-", "0.010887236529856965`"}], ",", 
   RowBox[{"-", "0.0025357962630909526`"}], ",", "0.006111585338891579`", ",",
    "0.014105602074829584`", ",", "0.020558530779750745`", ",", 
   "0.024743843525939942`", ",", "0.02617982945127361`", ",", 
   "0.02468743451865434`", ",", "0.02041515425282668`", ",", 
   "0.013827344870145574`", ",", "0.005656382882510258`", ",", 
   RowBox[{"-", "0.003176744487230863`"}], ",", 
   RowBox[{"-", "0.011665071838764435`"}], ",", 
   RowBox[{"-", "0.01883024042339791`"}], ",", 
   RowBox[{"-", "0.023836052081754266`"}], ",", 
   RowBox[{"-", "0.02608775465150377`"}], ",", 
   RowBox[{"-", "0.025305109885804356`"}], ",", 
   RowBox[{"-", "0.021560033005717457`"}], ",", 
   RowBox[{"-", "0.015273510789197992`"}], ",", 
   RowBox[{"-", "0.007171180905409055`"}], ",", "0.0017981410776945418`", ",",
    "0.010572148677030699`", ",", "0.018100468534365165`", ",", 
   "0.023471093494870632`", ",", "0.026022558184384793`", ",", 
   "0.02542789377959835`", ",", "0.021739452121346654`", ",", 
   "0.015388181932559414`", ",", "0.00713636962706802`", ",", 
   RowBox[{"-", "0.0020114151571345705`"}], ",", 
   RowBox[{"-", "0.0109291062262124`"}], ",", 
   RowBox[{"-", "0.01850735909578128`"}], ",", 
   RowBox[{"-", "0.023792320065540714`"}], ",", 
   RowBox[{"-", "0.026107528312664992`"}], ",", 
   RowBox[{"-", "0.025143181666325815`"}], ",", 
   RowBox[{"-", "0.021000700229582326`"}], ",", 
   RowBox[{"-", "0.014185881958199233`"}], ",", 
   RowBox[{"-", "0.00555033316292418`"}], ",", "0.0038125108983321494`", ",", 
   "0.012704433353174718`", ",", "0.019975591653844667`", ",", 
   "0.024674267265583357`", ",", "0.026173608606958127`", ",", 
   "0.024258250282713122`", ",", "0.01915850804582508`", ",", 
   "0.01152644290080868`", ",", "0.002355645178452706`", ",", 
   RowBox[{"-", "0.007145864967185416`"}], ",", 
   RowBox[{"-", "0.015713702542767376`"}], ",", 
   RowBox[{"-", "0.02219564641157454`"}], ",", 
   RowBox[{"-", "0.02570817181909326`"}], ",", 
   RowBox[{"-", "0.025759552020116826`"}], ",", 
   RowBox[{"-", "0.02232206732121205`"}], ",", 
   RowBox[{"-", "0.015842340154501172`"}], ",", 
   RowBox[{"-", "0.00718699968803305`"}], ",", "0.0024703003405391736`", ",", 
   "0.011806230301548738`", ",", "0.01952869353560726`", ",", 
   "0.024556663772639688`", ",", "0.02617382377346946`", ",", 
   "0.024133895910995764`", ",", "0.018701781697677763`", ",", 
   "0.010623289221980041`", ",", "0.001026175905960527`", ",", 
   RowBox[{"-", "0.00873490813483794`"}], ",", 
   RowBox[{"-", "0.017268640112257174`"}], ",", 
   RowBox[{"-", "0.02334588153426433`"}], ",", 
   RowBox[{"-", "0.026078716923991344`"}], ",", 
   RowBox[{"-", "0.02505335556218529`"}], ",", 
   RowBox[{"-", "0.020396605286275352`"}], ",", 
   RowBox[{"-", "0.012764796320082593`"}], ",", 
   RowBox[{"-", "0.003255103318294765`"}], ",", "0.006749381645631925`", ",", 
   "0.015779408726651747`", ",", "0.02249556190205907`", ",", 
   "0.025888743409823226`", ",", "0.025434923344754744`", ",", 
   "0.021180015400896368`", ",", "0.013740639715986366`", ",", 
   "0.004218873405329666`", ",", 
   RowBox[{"-", "0.005957924587237432`"}], ",", 
   RowBox[{"-", "0.015249453302061844`"}], ",", 
   RowBox[{"-", "0.022235679699261313`"}], ",", 
   RowBox[{"-", "0.025835645018874157`"}], ",", 
   RowBox[{"-", "0.025477931506000813`"}], ",", 
   RowBox[{"-", "0.021195474583306336`"}], ",", 
   RowBox[{"-", "0.0136284541700838`"}], ",", 
   RowBox[{"-", "0.003932896729375401`"}], ",", "0.006392715173312797`", ",", 
   "0.015737374668991794`", ",", "0.02262905141553016`", ",", 
   "0.025968524675824355`", ",", "0.025208150639021865`", ",", 
   "0.020446011156408758`", ",", "0.012418680423706334`", ",", 
   "0.002391684672926786`", ",", 
   RowBox[{"-", "0.008036837122080781`"}], ",", 
   RowBox[{"-", "0.017189374902564385`"}], ",", 
   RowBox[{"-", "0.02357935127188614`"}], ",", 
   RowBox[{"-", "0.026154909561643153`"}], ",", 
   RowBox[{"-", "0.024475885011288227`"}], ",", 
   RowBox[{"-", "0.018793632806283107`"}], ",", 
   RowBox[{"-", "0.010018628839092053`"}], ",", "0.00042108496330086254`", 
   ",", "0.010809389220010632`", ",", "0.019423166536575796`", ",", 
   "0.02481915689411649`", ",", "0.026078716923991326`", ",", 
   "0.022968546286684672`", ",", "0.015988618780595713`", ",", 
   "0.006296961558023938`", ",", 
   RowBox[{"-", "0.004478405426279028`"}], ",", 
   RowBox[{"-", "0.014510583952401991`"}], ",", 
   RowBox[{"-", "0.022083274698516644`"}], ",", 
   RowBox[{"-", "0.025886291714184766`"}], ",", 
   RowBox[{"-", "0.025245967662592576`"}], ",", 
   RowBox[{"-", "0.02024936173071292`"}], ",", 
   RowBox[{"-", "0.011738645156184637`"}], ",", 
   RowBox[{"-", "0.0011740890047371021`"}], ",", "0.009613002657860024`", ",",
    "0.01873628136195341`", ",", "0.02458505316067632`", ",", 
   "0.026111625528275957`", ",", "0.023023579981331845`", ",", 
   "0.01584495917414211`", ",", "0.005832915356337121`", ",", 
   RowBox[{"-", "0.005238065477596554`"}], ",", 
   RowBox[{"-", "0.015388181932559716`"}], ",", 
   RowBox[{"-", "0.02278621884696009`"}], ",", 
   RowBox[{"-", "0.02608215549797123`"}], ",", 
   RowBox[{"-", "0.024657729300596887`"}], ",", 
   RowBox[{"-", "0.018747766462521145`"}], ",", 
   RowBox[{"-", "0.009407640475496443`"}], ",", "0.0016701181340596763`", ",",
    "0.012459207636340536`", ",", "0.020969227778047845`", ",", 
   "0.025614437449073248`", ",", "0.025513053888508115`", ",", 
   "0.02065996929108406`", ",", "0.011938176340139123`", ",", 
   "0.0009637135827106289`", ",", 
   RowBox[{"-", "0.010209797712670205`"}], ",", 
   RowBox[{"-", "0.01947381997502613`"}], ",", 
   RowBox[{"-", "0.02506383334096517`"}], ",", 
   RowBox[{"-", "0.02589892891281611`"}], ",", 
   RowBox[{"-", "0.021796112422538438`"}], ",", 
   RowBox[{"-", "0.013515924285829853`"}], ",", 
   RowBox[{"-", "0.00262746355266763`"}], ",", "0.008784512048205252`", ",", 
   "0.018516664247956244`", ",", "0.02467316746141807`", ",", 
   "0.026038350560955232`", ",", "0.022322067321212027`", ",", 
   "0.014227332178333076`", ",", "0.0033236430321520265`", ",", 
   RowBox[{"-", "0.008252572349225381`"}], ",", 
   RowBox[{"-", "0.018214228767919338`"}], ",", 
   RowBox[{"-", "0.02457599494286628`"}], ",", 
   RowBox[{"-", "0.026053310297913964`"}], ",", 
   RowBox[{"-", "0.02232722258899566`"}], ",", 
   RowBox[{"-", "0.01411945682857797`"}], ",", 
   RowBox[{"-", "0.003059152285130201`"}], ",", "0.008635594573853928`", ",", 
   "0.018600199805325124`", ",", "0.02480235710359077`", ",", 
   "0.02596009764442971`", ",", "0.021812500271176`", ",", 
   "0.013184824597083568`", ",", "0.001830960639455901`", ",", 
   RowBox[{"-", "0.009918241401942184`"}], ",", 
   RowBox[{"-", "0.01963133361429177`"}], ",", 
   RowBox[{"-", "0.025280484524058296`"}], ",", 
   RowBox[{"-", "0.025668844174673095`"}], ",", 
   RowBox[{"-", "0.02069024197991187`"}], ",", 
   RowBox[{"-", "0.01136370733726229`"}], ",", "0.00036845306668823336`", ",",
    "0.012040537324995515`", ",", "0.021180015400896396`", ",", 
   "0.025832980963019246`", ",", "0.02498654019407161`", ",", 
   "0.018795923009717618`", ",", "0.008564126606266992`", ",", 
   RowBox[{"-", "0.003525861522742189`"}], ",", 
   RowBox[{"-", "0.014872733372249435`"}], ",", 
   RowBox[{"-", "0.023015745268208224`"}], ",", 
   RowBox[{"-", "0.026170996272108102`"}], ",", 
   RowBox[{"-", "0.023627738741399357`"}], ",", 
   RowBox[{"-", "0.015915577988310114`"}], ",", 
   RowBox[{"-", "0.004701889224913253`"}], ",", "0.007562635375851099`", ",", 
   "0.018176382118604402`", ",", "0.02478227712993578`", ",", 
   "0.025895069984298483`", ",", "0.021241723541241233`", ",", 
   "0.01183558441850465`", ",", 
   RowBox[{"-", "0.00023686727402097738`"}], ",", 
   RowBox[{"-", "0.012273627484805438`"}], ",", 
   RowBox[{"-", "0.021560033005717703`"}], ",", 
   RowBox[{"-", "0.025982877248975363`"}], ",", 
   RowBox[{"-", "0.02451651152048651`"}], ",", 
   RowBox[{"-", "0.01746802927310852`"}], ",", 
   RowBox[{"-", "0.006421423603132152`"}], ",", "0.006111585338890773`", ",", 
   "0.01725874720572593`", ",", "0.0244453987746863`", ",", 
   "0.025992821374377174`", ",", "0.02151701949230831`", ",", 
   "0.012031772624783268`", ",", 
   RowBox[{"-", "0.0002730541044676441`"}], ",", 
   RowBox[{"-", "0.012531481662676319`"}], ",", 
   RowBox[{"-", "0.021866924813061756`"}], ",", 
   RowBox[{"-", "0.02606925749481011`"}], ",", 
   RowBox[{"-", "0.024123683699548013`"}], ",", 
   RowBox[{"-", "0.016463635188211753`"}], ",", 
   RowBox[{"-", "0.004883008284415156`"}], ",", "0.00787699139134581`", ",", 
   "0.018773007624740067`", ",", "0.02518582556603037`", ",", 
   "0.02555445485351168`", ",", "0.019763525650777897`", ",", 
   "0.00918620977445307`", ",", 
   RowBox[{"-", "0.003633407449968992`"}], ",", 
   RowBox[{"-", "0.015587112486074464`"}], ",", 
   RowBox[{"-", "0.023755121892824846`"}], ",", 
   RowBox[{"-", "0.026122550830415033`"}], ",", 
   RowBox[{"-", "0.02208327469851644`"}], ",", 
   RowBox[{"-", "0.012603632008346908`"}], ",", "2.571376210337195`*^-17"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.640338024857018*^9, 3.640338066630088*^9}, {
   3.6403382198668127`*^9, 3.640338222219816*^9}, 3.640338869492388*^9, 
   3.640339893844839*^9, {3.6403410615885963`*^9, 3.640341088636709*^9}, 
   3.641010167909877*^9, 3.641016694629705*^9, 3.641022400224513*^9, 
   3.641025249275279*^9, 3.6410257584623737`*^9, {3.641027677666648*^9, 
   3.641027679566313*^9}, 3.6410297567840643`*^9, 3.64103014703236*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<datatiltfreqsweep2-5-15.txt\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5", ",", "0.01"}], "]"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.640348434821362*^9, 3.640348437686083*^9}, {
  3.641010560945403*^9, 3.641010566113248*^9}, {3.641016740047043*^9, 
  3.641016742326993*^9}, {3.6410224041133947`*^9, 3.641022410931541*^9}, {
  3.641025263809992*^9, 3.6410252642582617`*^9}, {3.6410257624960537`*^9, 
  3.641025762983898*^9}, {3.641027683437847*^9, 3.6410276836773577`*^9}, {
  3.6410297606563253`*^9, 3.641029772808734*^9}}],

Cell[BoxData["\<\"datatiltfreqsweep2-5-15.txt\"\>"], "Output",
 CellChangeTimes->{
  3.641010567006525*^9, 3.641016743826872*^9, 3.641022411758315*^9, {
   3.641025261520461*^9, 3.641025264755639*^9}, 3.641025763343347*^9, 
   3.641027684615554*^9, 3.641029773305441*^9, 3.641030150296702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<datapanfreq1.txt\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5", ",", "0.001"}], "]"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.640351897362234*^9, 3.6403519183457947`*^9}, {
  3.640352232226317*^9, 3.640352239706066*^9}}],

Cell[BoxData["\<\"datapanfreq1.txt\"\>"], "Output",
 CellChangeTimes->{{3.6403519061864*^9, 3.640351918851541*^9}, 
   3.640352240806785*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Matrix"}]], "Input",
 CellChangeTimes->{{3.640840185424253*^9, 3.640840189445469*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Information", "::", "notfound"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Symbol \[NoBreak]\\!\\(\\\"Matrix\\\"\\)\[NoBreak] not \
found. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/notfound\\\", ButtonNote -> \
\\\"Information::notfound\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640840189966099*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6408402494024982`*^9, 3.640840262599531*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"u", ",", "v"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.640840263760708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "u", "}"}], ",", 
    RowBox[{"{", "v", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6408402657600813`*^9, 3.640840280912093*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "u", "}"}], ",", 
   RowBox[{"{", "v", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.640840282777145*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "*", "n"}]], "Input",
 CellChangeTimes->{{3.6408402840771027`*^9, 3.6408402867681227`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \[NoBreak]\\!\\(\\(\\({\\({u, \
v}\\)}\\)\\)\\\\ \\(\\({\\(\\({u}\\)\\), \\(\\({v}\\)\\)}\\)\\)\\)\[NoBreak] \
cannot be combined. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", ButtonNote -> \
\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6408402875303373`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], "}"}], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "u", "}"}], ",", 
    RowBox[{"{", "v", "}"}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.6408402875309477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.64084032888885*^9, 3.640840340072991*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"u", "v"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6408403409128723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.640840349035102*^9, 3.640840349129301*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"u"},
     {"v"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6408403496620092`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", ".", "n"}]], "Input",
 CellChangeTimes->{{3.6408404083638*^9, 3.640840410891577*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["u", "2"], "+", 
    SuperscriptBox["v", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.640840411832724*^9}]
}, Open  ]]
},
WindowSize->{740, 847},
WindowMargins->{{Automatic, 387}, {Automatic, 0}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 340, 9, 43, "Input"],
Cell[922, 33, 528, 10, 23, "Message"],
Cell[1453, 45, 596, 12, 40, "Message"],
Cell[2052, 59, 528, 10, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2617, 74, 462, 10, 27, "Input"],
Cell[3082, 86, 3174, 53, 208, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6293, 144, 3904, 71, 523, "Input"],
Cell[10200, 217, 621, 12, 56, "Message"],
Cell[10824, 231, 276, 7, 21, "Message"]
}, Open  ]],
Cell[11115, 241, 93, 1, 27, "Input"],
Cell[CellGroupData[{
Cell[11233, 246, 133, 2, 43, "Input"],
Cell[11369, 250, 1185, 19, 223, "Output"]
}, Open  ]],
Cell[12569, 272, 130, 2, 27, "Input"],
Cell[12702, 276, 207, 5, 43, "Input"],
Cell[CellGroupData[{
Cell[12934, 285, 675, 15, 43, "Input"],
Cell[13612, 302, 313, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13962, 312, 392, 10, 43, "Input"],
Cell[14357, 324, 119, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14513, 330, 1217, 26, 43, "Input"],
Cell[15733, 358, 48660, 803, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64430, 1166, 286, 8, 43, "Input"],
Cell[64719, 1176, 20540, 376, 1089, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85296, 1557, 709, 15, 27, "Input"],
Cell[86008, 1574, 293, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86338, 1583, 403, 11, 27, "Input"],
Cell[86744, 1596, 141, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86922, 1603, 115, 2, 27, "Input"],
Cell[87040, 1607, 463, 10, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87540, 1622, 199, 5, 27, "Input"],
Cell[87742, 1629, 139, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87918, 1638, 224, 6, 27, "Input"],
Cell[88145, 1646, 163, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88345, 1656, 119, 2, 27, "Input"],
Cell[88467, 1660, 541, 11, 23, "Message"],
Cell[89011, 1673, 263, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89311, 1687, 124, 2, 27, "Input"],
Cell[89438, 1691, 612, 17, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90087, 1713, 125, 2, 27, "Input"],
Cell[90215, 1717, 619, 18, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90871, 1740, 113, 2, 27, "Input"],
Cell[90987, 1744, 191, 6, 33, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
