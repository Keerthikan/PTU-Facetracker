(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     87113,       1701]
NotebookOptionsPosition[     84549,       1610]
NotebookOutlinePosition[     84904,       1626]
CellTagsIndexPosition[     84861,       1623]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.349880"}], "}"}], "]"}], ",", "100"}], "]"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.639478443755507*^9, 3.6394784666897793`*^9}, {
  3.639478521467534*^9, 3.6394785235872593`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NormalDistribution", "::", "argr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(NormalDistribution\\)\[NoBreak] called \
with 1 argument; \[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NormalDistribution\\\", \
ButtonNote -> \\\"NormalDistribution::argr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.639478529738714*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RandomVariate", "::", "realprm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Parameter \[NoBreak]\\!\\({0, 0.34988`}\\)\[NoBreak] at \
position \[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(NormalDistribution[\\(\\({0, 0.34988`}\\)\\)]\\)\[NoBreak] is \
expected to be real. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/RandomVariate\\\", ButtonNote -> \
\\\"RandomVariate::realprm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6394785298157463`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NormalDistribution", "::", "argr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(NormalDistribution\\)\[NoBreak] called \
with 1 argument; \[NoBreak]\\!\\(2\\)\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NormalDistribution\\\", \
ButtonNote -> \\\"NormalDistribution::argr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.639478529823181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.34988`"}], "}"}], "]"}], ",", "100"}], "]"}]], \
"Input",
 CellChangeTimes->{{3.6394786642468348`*^9, 3.6394786847766533`*^9}, {
  3.639478727669197*^9, 3.639478824587674*^9}, {3.639478856918448*^9, 
  3.639478861044869*^9}, {3.63947893313687*^9, 3.6394789496712923`*^9}, {
  3.639478983106934*^9, 3.639479038097329*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.07511799301568223`", ",", "0.08733348062384172`", ",", 
   "0.06851466239349208`", ",", "0.02647381791069392`", ",", 
   "0.17925160590794037`", ",", "0.17258814644318649`", ",", 
   "0.1478055434166861`", ",", "0.07305691721991403`", ",", 
   "0.32352963646419813`", ",", "0.08939760319219603`", ",", 
   "0.2722994029198558`", ",", "0.19165780721590392`", ",", 
   "0.1576131750234006`", ",", "0.004384051480630813`", ",", 
   "0.3111013176383423`", ",", "0.20385797221070084`", ",", 
   "0.004996387166555261`", ",", "0.06797854105057038`", ",", 
   "0.2766509243827813`", ",", "0.1967635724430838`", ",", 
   "0.2608064969199107`", ",", "0.3347904107502963`", ",", 
   "0.140801625870359`", ",", "0.29492986628082446`", ",", 
   "0.3161428358896559`", ",", "0.3146715932191075`", ",", 
   "0.22291610773285714`", ",", "0.2158390313595891`", ",", 
   "0.017135185264201325`", ",", "0.2815157273812681`", ",", 
   "0.06761133311113315`", ",", "0.1227232765380114`", ",", 
   "0.12364342334996065`", ",", "0.3437952353788019`", ",", 
   "0.07822865764165376`", ",", "0.12174371130682882`", ",", 
   "0.33815582266305594`", ",", "0.02821427207321686`", ",", 
   "0.25613536091343364`", ",", "0.056631387004747846`", ",", 
   "0.19073433400290968`", ",", "0.12901509720728427`", ",", 
   "0.13454325381205268`", ",", "0.007093016070854163`", ",", 
   "0.2232944690023982`", ",", "0.2783113518963925`", ",", 
   "0.28752916255029565`", ",", "0.24438470898450354`", ",", 
   "0.16811166405364059`", ",", "0.02554088387272202`", ",", 
   "0.10652925363436488`", ",", "0.12436648114635407`", ",", 
   "0.12905849567088218`", ",", "0.04645660473357477`", ",", 
   "0.09663244610190036`", ",", "0.014391141114773687`", ",", 
   "0.3405759061485731`", ",", "0.3464640826437903`", ",", 
   "0.29580068064990767`", ",", "0.0802204963639292`", ",", 
   "0.09315851330031094`", ",", "0.22809514753771704`", ",", 
   "0.2640417240698533`", ",", "0.061514750690382314`", ",", 
   "0.27076225298818296`", ",", "0.30095310107256107`", ",", 
   "0.1355724002443796`", ",", "0.004556653019421764`", ",", 
   "0.02605253973662708`", ",", "0.1763765803213539`", ",", 
   "0.17557826626717027`", ",", "0.05405524342947948`", ",", 
   "0.22703132917942476`", ",", "0.33281529563728224`", ",", 
   "0.12604187615737983`", ",", "0.0010322616782794114`", ",", 
   "0.038497831037764385`", ",", "0.09253590751108953`", ",", 
   "0.27246900455141726`", ",", "0.10626115099558925`", ",", 
   "0.2875104582320322`", ",", "0.2916147075064022`", ",", 
   "0.156399628139742`", ",", "0.2442097247502309`", ",", 
   "0.27684215287027375`", ",", "0.15025682067548657`", ",", 
   "0.2551915392474465`", ",", "0.10965195550986995`", ",", 
   "0.10938464946444648`", ",", "0.23170219968874955`", ",", 
   "0.03656568586874159`", ",", "0.11046165636883792`", ",", 
   "0.08403873265231127`", ",", "0.23697818828719236`", ",", 
   "0.22620054285965568`", ",", "0.21060523231842315`", ",", 
   "0.17066509339644093`", ",", "0.0229339177466531`", ",", 
   "0.02114537898652097`", ",", "0.18039464009708733`"}], "}"}]], "Output",
 CellChangeTimes->{3.639479038549111*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", 
  StyleBox["[", "Input"], 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\"\<\>", "/", "Users"}], "/", "keerthikanratnarajah"}], "/", 
      "PTU"}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"Facetracker", "/", "SystemIdent"}], "/", 
       RowBox[{"data", ".", "csv"}]}], "\"\<\>"}]}], "Input"], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.07511799301568223`", ",", "0.08733348062384172`", ",", 
     "0.06851466239349208`", ",", "0.02647381791069392`", ",", 
     "0.17925160590794037`", ",", "0.17258814644318649`", ",", 
     "0.1478055434166861`", ",", "0.07305691721991403`", ",", 
     "0.32352963646419813`", ",", "0.08939760319219603`", ",", 
     "0.2722994029198558`", ",", "0.19165780721590392`", ",", 
     "0.1576131750234006`", ",", "0.004384051480630813`", ",", 
     "0.3111013176383423`", ",", "0.20385797221070084`", ",", 
     "0.004996387166555261`", ",", "0.06797854105057038`", ",", 
     "0.2766509243827813`", ",", "0.1967635724430838`", ",", 
     "0.2608064969199107`", ",", "0.3347904107502963`", ",", 
     "0.140801625870359`", ",", "0.29492986628082446`", ",", 
     "0.3161428358896559`", ",", "0.3146715932191075`", ",", 
     "0.22291610773285714`", ",", "0.2158390313595891`", ",", 
     "0.017135185264201325`", ",", "0.2815157273812681`", ",", 
     "0.06761133311113315`", ",", "0.1227232765380114`", ",", 
     "0.12364342334996065`", ",", "0.3437952353788019`", ",", 
     "0.07822865764165376`", ",", "0.12174371130682882`", ",", 
     "0.33815582266305594`", ",", "0.02821427207321686`", ",", 
     "0.25613536091343364`", ",", "0.056631387004747846`", ",", 
     "0.19073433400290968`", ",", "0.12901509720728427`", ",", 
     "0.13454325381205268`", ",", "0.007093016070854163`", ",", 
     "0.2232944690023982`", ",", "0.2783113518963925`", ",", 
     "0.28752916255029565`", ",", "0.24438470898450354`", ",", 
     "0.16811166405364059`", ",", "0.02554088387272202`", ",", 
     "0.10652925363436488`", ",", "0.12436648114635407`", ",", 
     "0.12905849567088218`", ",", "0.04645660473357477`", ",", 
     "0.09663244610190036`", ",", "0.014391141114773687`", ",", 
     "0.3405759061485731`", ",", "0.3464640826437903`", ",", 
     "0.29580068064990767`", ",", "0.0802204963639292`", ",", 
     "0.09315851330031094`", ",", "0.22809514753771704`", ",", 
     "0.2640417240698533`", ",", "0.061514750690382314`", ",", 
     "0.27076225298818296`", ",", "0.30095310107256107`", ",", 
     "0.1355724002443796`", ",", "0.004556653019421764`", ",", 
     "0.02605253973662708`", ",", "0.1763765803213539`", ",", 
     "0.17557826626717027`", ",", "0.05405524342947948`", ",", 
     "0.22703132917942476`", ",", "0.33281529563728224`", ",", 
     "0.12604187615737983`", ",", "0.0010322616782794114`", ",", 
     "0.038497831037764385`", ",", "0.09253590751108953`", ",", 
     "0.27246900455141726`", ",", "0.10626115099558925`", ",", 
     "0.2875104582320322`", ",", "0.2916147075064022`", ",", 
     "0.156399628139742`", ",", "0.2442097247502309`", ",", 
     "0.27684215287027375`", ",", "0.15025682067548657`", ",", 
     "0.2551915392474465`", ",", "0.10965195550986995`", ",", 
     "0.10938464946444648`", ",", "0.23170219968874955`", ",", 
     "0.03656568586874159`", ",", "0.11046165636883792`", ",", 
     "0.08403873265231127`", ",", "0.23697818828719236`", ",", 
     "0.22620054285965568`", ",", "0.21060523231842315`", ",", 
     "0.17066509339644093`", ",", "0.0229339177466531`", ",", 
     "0.02114537898652097`", ",", "0.18039464009708733`"}], "}"}], ",", 
   "\"\<csv\>\""}], 
  StyleBox["]", "Input"]}]], "Input",
 CellChangeTimes->{{3.639479040361787*^9, 3.639479053626348*^9}, {
  3.6394790836563396`*^9, 3.6394790845675907`*^9}, {3.6394802058130302`*^9, 
  3.639480231757846*^9}, {3.639480425075922*^9, 3.639480427721554*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Syntax", "::", "tsntxi"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\\\"\[NoBreak]\\!\\(Export[\\(\\(\[LeftSkeleton] 200 \
\[RightSkeleton]\\)\\), \\(\\({0.07511799301568223`, 0.08733348062384172`, \
0.06851466239349208`, 0.02647381791069392`, \\(\\(\[LeftSkeleton] 92 \
\[RightSkeleton]\\)\\), 0.17066509339644093`, 0.0229339177466531`, \
0.02114537898652097`, 0.18039464009708733`}\\)\\), \
\\\"csv\\\"]\\)\[NoBreak]\\\" is incomplete; more input is \
needed.\[NoBreak]\\!\\(\\\"\\\"\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.639480431506483*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Syntax", "::", "sntxi"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Incomplete expression; more input is needed \
\[NoBreak]\\!\\(\\\"\\\"\\)\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6394804315074177`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.63947887163258*^9, 3.6394788725240192`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Path", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6394801106887627`*^9, 3.63948011570044*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Applications/Mathematica.app/SystemFiles/Links\"\>", 
   ",", "\<\"/Users/keerthikanratnarajah/Library/Mathematica/Kernel\"\>", 
   ",", "\<\"/Users/keerthikanratnarajah/Library/Mathematica/Autoload\"\>", 
   ",", "\<\"/Users/keerthikanratnarajah/Library/Mathematica/Applications\"\>\
", ",", "\<\"/Library/Mathematica/Kernel\"\>", 
   ",", "\<\"/Library/Mathematica/Autoload\"\>", 
   ",", "\<\"/Library/Mathematica/Applications\"\>", ",", "\<\".\"\>", 
   ",", "\<\"/Users/keerthikanratnarajah\"\>", 
   ",", "\<\"/Applications/Mathematica.app/AddOns/Packages\"\>", 
   ",", "\<\"/Applications/Mathematica.app/AddOns/LegacyPackages\"\>", 
   ",", "\<\"/Applications/Mathematica.app/SystemFiles/Autoload\"\>", 
   ",", "\<\"/Applications/Mathematica.app/AddOns/Autoload\"\>", 
   ",", "\<\"/Applications/Mathematica.app/AddOns/Applications\"\>", 
   ",", "\<\"/Applications/Mathematica.app/AddOns/ExtraPackages\"\>", 
   ",", "\<\"/Applications/Mathematica.app/SystemFiles/Kernel/Packages\"\>", 
   ",", "\<\"/Applications/Mathematica.app/Documentation/English/System\"\>"}]\
, "}"}]], "Output",
 CellChangeTimes->{3.6394801163990927`*^9}]
}, Open  ]],

Cell[BoxData["\"\</Users/keerthikanratnarajah/Documents/Untitled 4.pdf\>\""], \
"Input",
 CellChangeTimes->{3.639480188310828*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "@", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\n"}]], "Input",
 CellChangeTimes->{{3.639480460167736*^9, 3.6394804601685658`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<dataPan.csv\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.799760"}], ",", "0.799760`"}], "}"}], "]"}], ",", 
      "100"}], "]"}], "}"}], ",", "\"\<csv\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.639480503576627*^9, 3.639480535184353*^9}, {
  3.639480772615367*^9, 3.639480778119028*^9}, {3.639484401399372*^9, 
  3.639484406854076*^9}, {3.639558343958295*^9, 3.63955836586764*^9}, {
  3.639565422469839*^9, 3.639565423055249*^9}, {3.640267129874267*^9, 
  3.640267130060254*^9}}],

Cell[BoxData["\<\"dataPan.csv\"\>"], "Output",
 CellChangeTimes->{
  3.6394805361807013`*^9, 3.6394807791304483`*^9, 3.639484407321741*^9, {
   3.6395583577958593`*^9, 3.639558393673572*^9}, {3.639565424213895*^9, 
   3.639565431424055*^9}, 3.640267131705201*^9, {3.640269801657885*^9, 
   3.640269813948007*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<dataPantid.csv\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "100"}], "]"}], "}"}], 
   ",", "\"\<csv\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.64026979227352*^9, 3.64026980495245*^9}}],

Cell[BoxData["\<\"dataPantid.csv\"\>"], "Output",
 CellChangeTimes->{{3.6402697978117123`*^9, 3.6402698154267693`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{"0.0799760", "*", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"1", "/", "10"}], "*", "2", " ", "Pi", " ", "t"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "600"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6403380226120243`*^9, 3.640338066042439*^9}, {
   3.640338106341061*^9, 3.6403381256374197`*^9}, {3.640338160165903*^9, 
   3.640338160253727*^9}, {3.6403382143351297`*^9, 3.640338214447598*^9}, 
   3.6403388671435537`*^9, {3.640339888073859*^9, 3.640339893001239*^9}, {
   3.640341057064145*^9, 3.6403410868476686`*^9}, 3.641010150128244*^9, {
   3.641010242200759*^9, 3.641010243705533*^9}, {3.641016671820258*^9, 
   3.641016688268585*^9}, 3.641022393225388*^9, {3.641025239786951*^9, 
   3.641025240347734*^9}, {3.641025748364807*^9, 3.641025749939118*^9}, {
   3.6410276706729593`*^9, 3.641027672326419*^9}, {3.641029748523312*^9, 
   3.6410297508487797`*^9}, {3.641030135723681*^9, 3.641030140696452*^9}, {
   3.641142726085487*^9, 3.6411427354442453`*^9}, {3.641148557736259*^9, 
   3.6411485756244287`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
4LDwpF//MAs27bl6kFJYUP8/kfaENQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 600}, {-0.07997598692546974, 0.07997595862601008}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.6410101628896217`*^9, 3.64101024466968*^9, 3.641016690157407*^9, 
   3.641022396358583*^9, {3.6410252423704576`*^9, 3.641025245367272*^9}, {
   3.641025751404275*^9, 3.641025756140582*^9}, {3.641027672927129*^9, 
   3.6410276752352324`*^9}, {3.641029751478106*^9, 3.6410297545806513`*^9}, {
   3.641030141648686*^9, 3.641030144326666*^9}, 3.641142736371871*^9, {
   3.641148563770741*^9, 3.6411485762738028`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<datapanfreqsweep1tenthHz.txt\>\"", ",", 
   RowBox[{"Chop", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"g", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "600", ",", "0.1"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.640348434821362*^9, 3.640348437686083*^9}, {
   3.641010560945403*^9, 3.641010566113248*^9}, {3.641016740047043*^9, 
   3.641016742326993*^9}, {3.6410224041133947`*^9, 3.641022410931541*^9}, {
   3.641025263809992*^9, 3.6410252642582617`*^9}, {3.6410257624960537`*^9, 
   3.641025762983898*^9}, {3.641027683437847*^9, 3.6410276836773577`*^9}, {
   3.6410297606563253`*^9, 3.641029772808734*^9}, {3.6411427625910597`*^9, 
   3.6411427715360527`*^9}, 3.6411430622861147`*^9, 3.64114339106563*^9, {
   3.641146639786746*^9, 3.641146654248127*^9}, {3.6411481158775063`*^9, 
   3.64114812119711*^9}, {3.6411481522768908`*^9, 3.6411481641722593`*^9}, {
   3.641148595612843*^9, 3.641148621718711*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Export", "::", "nodir"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Directory \
\[NoBreak]\\!\\(\\\"/Users/keerthikanratnarajah/PTU-Facetracker/SystemIdent/\
datapanfreqsweep1/\\\"\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Export\\\", ButtonNote -> \
\\\"Export::nodir\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.641148599334939*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Export", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \[NoBreak]\\!\\(\\\"datapanfreqsweep1/10hz.txt\
\\\"\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/noopen\\\", ButtonNote -> \
\\\"Export::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.641148599376029*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.641010567006525*^9, 3.641016743826872*^9, 3.641022411758315*^9, {
   3.641025261520461*^9, 3.641025264755639*^9}, 3.641025763343347*^9, 
   3.641027684615554*^9, 3.641029773305441*^9, 3.641030150296702*^9, 
   3.641142772776156*^9, {3.641143040016141*^9, 3.641143062756974*^9}, 
   3.641143391537098*^9, {3.641146641339745*^9, 3.6411466548606663`*^9}, 
   3.641147724270629*^9, {3.641148121763384*^9, 3.641148165591757*^9}, {
   3.6411485865336943`*^9, 3.641148599379293*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", "100"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.641146618571896*^9, 3.6411466238310843`*^9}}],

Cell[BoxData["0.01`"], "Output",
 CellChangeTimes->{{3.6411466201748257`*^9, 3.6411466242893887`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<datapanfreq1.txt\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5", ",", "0.001"}], "]"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.640351897362234*^9, 3.6403519183457947`*^9}, {
  3.640352232226317*^9, 3.640352239706066*^9}}],

Cell[BoxData["\<\"datapanfreq1.txt\"\>"], "Output",
 CellChangeTimes->{{3.6403519061864*^9, 3.640351918851541*^9}, 
   3.640352240806785*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Matrix"}]], "Input",
 CellChangeTimes->{{3.640840185424253*^9, 3.640840189445469*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Information", "::", "notfound"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Symbol \[NoBreak]\\!\\(\\\"Matrix\\\"\\)\[NoBreak] not \
found. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/notfound\\\", ButtonNote -> \
\\\"Information::notfound\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640840189966099*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6408402494024982`*^9, 3.640840262599531*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"u", ",", "v"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.640840263760708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "u", "}"}], ",", 
    RowBox[{"{", "v", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6408402657600813`*^9, 3.640840280912093*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "u", "}"}], ",", 
   RowBox[{"{", "v", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.640840282777145*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "*", "n"}]], "Input",
 CellChangeTimes->{{3.6408402840771027`*^9, 3.6408402867681227`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \[NoBreak]\\!\\(\\(\\({\\({u, \
v}\\)}\\)\\)\\\\ \\(\\({\\(\\({u}\\)\\), \\(\\({v}\\)\\)}\\)\\)\\)\[NoBreak] \
cannot be combined. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", ButtonNote -> \
\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6408402875303373`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], "}"}], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "u", "}"}], ",", 
    RowBox[{"{", "v", "}"}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.6408402875309477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.64084032888885*^9, 3.640840340072991*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"u", "v"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6408403409128723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.640840349035102*^9, 3.640840349129301*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"u"},
     {"v"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6408403496620092`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", ".", "n"}]], "Input",
 CellChangeTimes->{{3.6408404083638*^9, 3.640840410891577*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["u", "2"], "+", 
    SuperscriptBox["v", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.640840411832724*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.641144100951503*^9, 3.64114410186066*^9}}]
},
WindowSize->{740, 847},
WindowMargins->{{Automatic, 387}, {Automatic, 0}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 340, 9, 43, "Input"],
Cell[922, 33, 528, 10, 23, "Message"],
Cell[1453, 45, 596, 12, 40, "Message"],
Cell[2052, 59, 528, 10, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2617, 74, 462, 10, 27, "Input"],
Cell[3082, 86, 3174, 53, 208, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6293, 144, 3904, 71, 523, "Input"],
Cell[10200, 217, 621, 12, 56, "Message"],
Cell[10824, 231, 276, 7, 21, "Message"]
}, Open  ]],
Cell[11115, 241, 93, 1, 27, "Input"],
Cell[CellGroupData[{
Cell[11233, 246, 133, 2, 43, "Input"],
Cell[11369, 250, 1185, 19, 223, "Output"]
}, Open  ]],
Cell[12569, 272, 130, 2, 27, "Input"],
Cell[12702, 276, 207, 5, 43, "Input"],
Cell[CellGroupData[{
Cell[12934, 285, 675, 15, 43, "Input"],
Cell[13612, 302, 313, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13962, 312, 392, 10, 43, "Input"],
Cell[14357, 324, 119, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14513, 330, 1234, 25, 43, "Input"],
Cell[15750, 357, 60922, 1004, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76709, 1366, 1055, 20, 27, "Input"],
Cell[77767, 1388, 507, 11, 40, "Message"],
Cell[78277, 1401, 462, 10, 23, "Message"],
Cell[78742, 1413, 535, 8, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79314, 1426, 143, 3, 27, "Input"],
Cell[79460, 1431, 102, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79599, 1437, 403, 11, 27, "Input"],
Cell[80005, 1450, 141, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80183, 1457, 115, 2, 27, "Input"],
Cell[80301, 1461, 463, 10, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80801, 1476, 199, 5, 27, "Input"],
Cell[81003, 1483, 139, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81179, 1492, 224, 6, 27, "Input"],
Cell[81406, 1500, 163, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81606, 1510, 119, 2, 27, "Input"],
Cell[81728, 1514, 541, 11, 23, "Message"],
Cell[82272, 1527, 263, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82572, 1541, 124, 2, 27, "Input"],
Cell[82699, 1545, 612, 17, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83348, 1567, 125, 2, 27, "Input"],
Cell[83476, 1571, 619, 18, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84132, 1594, 113, 2, 27, "Input"],
Cell[84248, 1598, 191, 6, 33, "Output"]
}, Open  ]],
Cell[84454, 1607, 91, 1, 27, "Input"]
}
]
*)

(* End of internal cache information *)
